@import url('https://fonts.googleapis.com/css2?family=Sora&display=swap');

:root {
    --color-shadow: grey;
    --section-padding: 8px;
    --section-margin: 8px;
    --border-radius-default: 8px;
    --player1-color: rgb(0, 0, 0);
    --player2-color: rgb(0, 0, 0);
    --winningPlayer-color: rgb(0, 0, 0);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

img { 
    object-fit: cover;
    width: 100%;
}

button {
    border: none;
    background: none;
    padding: var(--section-padding);
    text-align: center;
    border-radius: var(--border-radius-default);
    cursor: pointer;
    font-size: 2rem;
}

body {
    font-family: 'Sora', sans-serif;
}

input, textarea, button {
    font-family: inherit
}

header {
    background: rgb(20, 141, 255);
    padding: var(--section-padding);
    text-align: center;
    font-size: 3rem;
    text-overflow: ellipsis;
    color: rgb(0, 0, 0);
    text-shadow: rgb(255, 255, 255) 1px 0 10px;
    box-shadow: 0 0 11px rgba(33, 33, 33, 0.822);
}

main {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 2fr 9fr 1fr;
    row-gap: var(--section-margin);
}

#player-turn-wrapper {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    text-align: center;
    padding: var(--section-padding);
    margin: var(--section-margin) 0px;
    border: solid 2px red;
    border-radius: var(--border-radius-default);
    /* max-width: 400px; */
    width: 100%;
    font-size: 2rem;
    overflow: hidden;
    white-space: nowrap;
}

#current-turn {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.player-settings {
    grid-row: 2 / 3;
    padding: var(--section-padding);
    margin: 0 var(--section-margin);
    width: 300px;
    border: solid black 2px;
    border-radius: var(--border-radius-default);
    display: flex;
    flex-direction: column;
    gap: 4px;
    align-items: center;
    box-shadow: 2px 5px 5px var(--color-shadow);
}

main > .player-settings {
    justify-self: right;
}

main > .player-settings ~ .player-settings{
    justify-self: left;
}

.player-settings h3 {
    padding: var(--section-padding);
    border: solid 2px black;
    border-radius: var(--border-radius-default);
    font-size: 36px;
    overflow: auto;
    word-break: break-all;
    max-height: 200px;
    width: 100%;
}

.player-settings h3:hover {
    background: rgb(218, 218, 218);
}

input[type='color'] {
    width: 100%;
    cursor: pointer;
    transition: box-shadow 0.2s;
}

#x-Color:hover {
    box-shadow: 0 0 11px var(--player1-color);
}

#o-Color:hover {
    box-shadow: 0 0 11px var(--player2-color);
}

#board-wrapper {
    grid-row: 2 / 3;
    display: grid;
    grid-template-columns: repeat(3,200px);
    grid-template-rows: repeat(3,200px);
    justify-content: center;
}

.space {
    cursor: pointer;
}

.row0,
.row1 {
    border-bottom: solid 4px black;
}

.col0,
.col1 {
    border-right: solid 4px black;
}

#newGameBtn {
    grid-row: 3 / 4;
    grid-column: 2 / 3;
    border: solid 2px black;
    border-radius: 16px;
    transition: 0.3s;
    margin-bottom: var(--section-margin);
}

#newGameBtn:hover {
    background: rgb(165, 165, 165);
}

#gameResult-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    padding: var(--section-padding);
    background: white;
    border: solid 3px var(--winningPlayer-color);
    border-radius: 24px;
    text-align: center;
    width: 30vw;
    height: fit-content;
    max-height: 80vh;
    font-size: 3rem;
    /* transition: opacity 0.5s linear ; */
    transition: font-size 2s linear;
    overflow-x: hidden;
    overflow-y: auto;
    overflow-wrap: break-word;
    cursor: pointer;
}

#gameResult-container.hide {
    transition: opacity 0s linear ;
    /* opacity: 0; */
    display: none;
    font-size: 1rem;
}

.toggle, .toggle:before, .slot__label, .curtain {
	transition-property: background-color, transform, visibility;
	transition-duration: 0.25s;
	transition-timing-function: ease-in, cubic-bezier(0.6,0.2,0.4,1.5), linear;
}
.human-toggle:before, .toggle:before, .slot, .slot__label {
	display: block;
}
.human-toggle:before, .toggle:before, .curtain {
	position: absolute;
}
.toggle:checked, .curtain {
	background-color: #2b7f3a;
}
.toggle:focus {
	outline: transparent;
}

.toggle,
.human-toggle {
	border-radius: 1.5em;
	box-shadow: 0 0 0 0.1em inset;
	cursor: pointer;
	position: relative;
	margin-right: 0.25em;
	width: 6em;
	height: 0;
	appearance: none;
}
.toggle:before{
	background: currentColor;
	border-radius: 50%;
	content: "";
	top: 0.5em;
	left: 0.1em;
	width: 2em;
	height: 0;
}

.toggle:checked:before,
.human-toggle:checked:before {
	transform: translateX(3.5em) ;
}

.toggle:checked + .slot .slot__label, #difficulty-toggle-slot .slot__label:nth-child(2) {
	transform: translateY(-50%) scaleY(0);
}

.toggle:checked + #difficulty-toggle-slot .slot__label:nth-child(2) {
	transform: translateY(-100%) scaleY(1);
}

.human-toggle:checked + .slot .slot__label,  .slot .slot__label:nth-child(2){
    transform: translateX(-100%) scaleX(0);
}

.human-toggle:checked + .slot .slot__label:nth-child(2) {
	transform: translateY(-100%) translateX(-1%) scaleX(1);
}

.toggle:checked + #difficulty-toggle-slot {
	background: red;
    color: white;
}
.slot {
	/* color: transparent; */
	cursor: pointer;
	font-size: 1.5em;
	font-weight: bold;
	/* letter-spacing: 0.1em; */
	line-height: .75;
	overflow: hidden;
	height: 1.5em;
    width: 100%;
	/* text-indent: -0.9em; */
	/* -webkit-text-stroke: 0.05em #fff; */
    border: solid black 2px;
    border-radius: var(--border-radius-default);
    padding: var(--section-padding);
    text-align: center;
}

.slot:hover {
    box-shadow: 0 0 11px rgba(33, 33, 33, 0.822);
}

#difficulty-toggle-slot {
    background: rgb(21, 255, 0);
    opacity: 0.5;
}
.slot__label {
	transform-origin: 50% 0;
}
.slot__label:nth-child(2) {
	transform-origin: 50% 100%;
}